package com.javaclub.dbrider;

import com.github.database.rider.core.api.configuration.DBUnit;
import com.github.database.rider.core.api.configuration.DataSetMergingStrategy;
import com.github.database.rider.core.api.dataset.DataSet;
import com.github.database.rider.junit5.DBUnitExtension;
import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Inherited;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;
import org.junit.jupiter.api.extension.ExtendWith;

/**
 * Configures support of the DBUnit.
 * The annotation clears all the tables before the test and skips
 * sequences and tables generated by liquibase.
 * If liquibase tables are cleaned, then the restart of the test context fails with errors.
 */
@Target(ElementType.TYPE)
@Retention(RetentionPolicy.RUNTIME)
@Documented
@Inherited
//@ExtendWith(RiderDbUnitExtension.class)
@ExtendWith(DBUnitExtension.class)
@DataSet(
    value = "reset.yml",
    skipCleaningFor = {"databasechangelog", "databasechangeloglock", "hibernate_sequence"})
@DBUnit(
    allowEmptyFields = true,
    cacheConnection = false,
    columnSensing = true,
    caseSensitiveTableNames = true,
    mergeDataSets = true,
    mergingStrategy = DataSetMergingStrategy.CLASS)
public @interface DatabaseUnit {

}
